version: '3.8'

services:
  crawler-service:
    build:
      context: ./crawler-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - CRAWLER_PORT=8080
      - PYTHON_SERVICE_URL=http://intel-service:8000
      - MAX_CONCURRENT_CRAWLS=10
      - MAX_DEPTH=3
      - LOG_LEVEL=INFO
    depends_on:
      - intel-service
      - redis
    volumes:
      - ./crawler-service:/app
    networks:
      - app-network
    restart: unless-stopped

  intel-service:
    build: 
      context: ./intel-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - INTEL_PORT=8000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=definitelynotaspy123
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION_NAME=entities
      - LOG_LEVEL=INFO
    depends_on:
      - neo4j
      - qdrant
    volumes:
      - ./intel-service:/app
    networks:
      - app-network
    restart: unless-stopped

  neo4j:
    image: neo4j:5.12.0
    environment:
      - NEO4J_AUTH=neo4j/definitelynotaspy123
      - NEO4J_PLUGINS=["apoc"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p definitelynotaspy123 'RETURN 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  neo4j_data:
  neo4j_logs:
  qdrant_data:
  redis_data:

networks:
  app-network:
    driver: bridge
